<% unless $promptless %>
[user]
  name = <%= print("Your Name: "); STDOUT.flush; STDIN.gets.chomp %>
  email = <%= print("Your Email: "); STDOUT.flush; STDIN.gets.chomp %>
<% end %>
[alias]
  co = checkout
  br = branch
  st = status
  rb = !sh -c 'git fetch &&  git checkout --track -b $0 origin/$0'
  rl = branch -a
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%%an>%Creset' --abbrev-commit --date=relative
  pup = !sh -c 'git submodule update --init --recursive && git submodule status'
  su = !sh -c 'git submodule -q foreach git pull -q origin master'
  autoformat = !sh -c 'git rev-parse && cp ~/.bin/pre-commit $(git rev-parse --show-cdup).git/hooks/ && echo "Autoformat enabled on commit"'
  g = grep --break --heading --line-number
  ignore = update-index --assume-unchanged
  unignore = update-index --no-assume-unchanged
  ignored = !git ls-files -v | grep "^[[:lower:]]"
  pullall = "!f(){ git pull \"$@\" && git submodule update --init --recursive; }; f"
  sgrep = "!f() { git grep \"$1\"; git submodule foreach \"git grep '$1'; true\" | grep -B 1 \"$1\"; }; f"
  rs = submodule foreach git reset --hard
  si = stash-index
[color]
  diff = auto
  status = auto
  branch = auto
  ui = auto
[core]
  excludesfile = <%= ENV['HOME'] %>/.gitignore
  editor = vim
  autocrlf = input
  pager = less -S
[apply]
  whitespace = nowarn
[format]
  pretty = %C(yellow)%h%Creset %s %C(red)(%cr)%Creset
[grep]
  lineNumber = true
[push]
  default = tracking
[init]
  templatedir = ~/.git-template
