# Set prefix to Ctrl-\
unbind C-b
set -g prefix 'C-\'
bind 'C-\' send-prefix

# 256 colors for vim
set -g default-terminal "screen-256color"

set -ga terminal-overrides ',*:Ss=\eE[%p1%d q:Se=\eE[2 q'

# Start window numbering at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g aggressive-resize on

# Cycle panes with C-b C-b
unbind ^B
bind ^B select-pane -t :.+

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Mouse mode
set -g mode-mouse on;
set -g mouse-resize-pane on;
set -g mouse-select-pane on;
set -g mouse-select-window on;

# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# Use the system clipboard
# set-option -g default-command "reattach-to-user-namespace -l bash"

## Clear the pane and it's history
bind -n C-DC send-keys C-l \; clear-history

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# hit C-\ twice to go to last window
bind-key b set-option status

bind-key / command-prompt "split-window 'exec man %%'"
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# C-l is taken over by vim style pane navigation
bind C-l send-keys 'C-l'

# C-Space to enter copy/scroll mode
bind ] copy-mode

# Escape to exit copy/scroll mode
bind-key -t vi-copy 'Escape' cancel

# Use vim keybindings in copy mode
setw -g mode-keys vi

# don't wait for an escape sequence after hitting
# # Esc. fixes insert mode exit lag in vim
set -sg escape-time 0

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Pane resizing with Ctrl+Alt + arrow
bind -n C-M-Left run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-Left) || tmux resize-pane -L 4"
bind -n C-M-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-Right) || tmux resize-pane -R 4"
bind -n C-M-Up run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-Up) || tmux resize-pane -U 2"
bind -n C-M-Down run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-Down) || tmux resize-pane -D 2"

# Pane resizing with Ctrl+Alt+H/J/K/L
bind -n C-M-H run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-H) || tmux resize-pane -L 4"
bind -n C-M-L run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-L) || tmux resize-pane -R 4"
bind -n C-M-K run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-K) || tmux resize-pane -U 2"
bind -n C-M-J run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-J) || tmux resize-pane -D 2"

# Use Powerline
source $SITE_PACKAGES/powerline/bindings/tmux/powerline.conf

# Fix ctrl+alt keys
set-option -g xterm-keys on

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
